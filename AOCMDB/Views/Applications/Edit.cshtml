@model AOCMDB.Models.Nodes.ApplicationNode

@{
    ViewBag.Title = "Edit";
    List<AOCMDB.Models.Nodes.ApplicationNode> Applications = (List<AOCMDB.Models.Nodes.ApplicationNode>)ViewData["Applications"];
    List<AOCMDB.Models.Nodes.DatabaseNode> Databases = (List<AOCMDB.Models.Nodes.DatabaseNode>)ViewData["Databases"];
    List<AOCMDB.Models.Nodes.ExternalLogicalStorageNode> ExternalLosticalStorages = (List<AOCMDB.Models.Nodes.ExternalLogicalStorageNode>)ViewData["ExternalLosticalStorages"];
    List<AOCMDB.Models.Nodes.ServerOrApplianceNode> ServersOrAppliances = (List<AOCMDB.Models.Nodes.ServerOrApplianceNode>)ViewData["ServersOrAppliances"];
    List<AOCMDB.Models.Nodes.SoftwareOrFrameworkNode> SoftwareOrFrameworks = (List<AOCMDB.Models.Nodes.SoftwareOrFrameworkNode>)ViewData["SoftwareOrFrameworks"];

    List<long> ApplicationsDep = (List<long>) ViewData["ApplicationsDep"];
    List<long> DatabasesDep = (List<long>) ViewData["DatabasesDep"];
    List<long> ExternalLosticalStoragesDep = (List<long>) ViewData["ExternalLosticalStoragesDep"];
    List<long> ServersOrAppliancesDep = (List<long>) ViewData["ServersOrAppliancesDep"];
    List<long> SoftwareOrFrameworksDep = (List<long>)ViewData["SoftwareOrFrameworksDep"];
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Application</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ApplicationId)

        @Html.HiddenFor(model => model.DatabaseRevision)

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedByUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedByUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedByUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GlobalApplicationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GlobalApplicationID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GlobalApplicationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SiteURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SiteURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NetworkDiagramOrInventory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NetworkDiagramOrInventory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NetworkDiagramOrInventory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdministrativeProcedures, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdministrativeProcedures, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdministrativeProcedures, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactInformation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactInformation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactInformation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientConfigurationAndValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientConfigurationAndValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientConfigurationAndValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerConfigurationandValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServerConfigurationandValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerConfigurationandValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecoveryProcedures, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecoveryProcedures, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecoveryProcedures, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Dependencies</label>
            <div class="col-md-10">
                <table class="table">
                    <tr>
                        <th>
                            Upstream Application Dependencies
                        </th>
                        <th>
                            Upstream Database Dependencies
                        </th>
                        <th>
                            Upstream External Logical Storage
                        </th>
                        <th>
                            Upstream Server or Appliance
                        </th>
                        <th>
                            Upstream Software Or Framework
                        </th>
                    </tr>
                    <tr>
                        <td>
                            <ul>
                                @foreach (AOCMDB.Models.Nodes.ApplicationNode App in Applications)
                                {
                                    <li>
                                        @Html.CheckBox(string.Concat("ApplicationID:", App.ApplicationId), ApplicationsDep.Contains(App.ApplicationId))
                                        @App.ApplicationName
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @foreach (AOCMDB.Models.Nodes.DatabaseNode App in Databases)
                                {
                                    <li>
                                        @Html.CheckBox(string.Concat("DatabaseID:", App.DatabaseId), DatabasesDep.Contains(App.DatabaseId))
                                        @App.DatabaseName
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @foreach (AOCMDB.Models.Nodes.ExternalLogicalStorageNode App in ExternalLosticalStorages)
                                {
                                    <li>
                                        @Html.CheckBox(string.Concat("ExternalLosticalStorageID:", App.ExternalLogicalStorageId), ExternalLosticalStoragesDep.Contains(App.ExternalLogicalStorageId))
                                        @App.ExternalLogicalStorageName
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @foreach (AOCMDB.Models.Nodes.ServerOrApplianceNode App in ServersOrAppliances)
                                {
                                    <li>
                                        @Html.CheckBox(string.Concat("ServerOrApplianceID:", App.ServerOrApplianceId), ServersOrAppliancesDep.Contains(App.ServerOrApplianceId))
                                        @App.ServerOrApplianceName
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @foreach (AOCMDB.Models.Nodes.SoftwareOrFrameworkNode App in SoftwareOrFrameworks)
                                {
                                    <li>
                                        @Html.CheckBox(string.Concat("SoftwareOrFrameworkID:", App.SoftwareOrFrameworkId), SoftwareOrFrameworksDep.Contains(App.SoftwareOrFrameworkId))
                                        @App.SoftwareOrFrameworkName
                                    </li>
                                }
                            </ul>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <input type="button" value="Back to List" onclick="location.href='@Url.Action("Index")'" />
</div>

@section Scripts {
<script type="text/javascript" src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
        tinymce.init({
            selector: "textarea",
            plugins: "table",
            tools: "inserttable",
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons",
            menu: {
                edit: { title: 'Edit', items: 'undo redo | cut copy paste pastetext | selectall' },
                insert: { title: 'Insert', items: 'link media | template hr' },
                format: { title: 'Format', items: 'bold italic underline strikethrough superscript subscript | formats | removeformat' },
                table: { title: 'Table', items: 'inserttable tableprops deletetable | cell row column' },
                tools: { title: 'Tools', items: 'spellchecker code' }
            },
            statusbar: true,
            resize: true,
            height : 400
        });
</script>
    @Scripts.Render("~/bundles/jqueryval")
}
